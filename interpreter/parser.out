Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> LPAREN functions RPAREN
Rule 2     functions -> empty
Rule 3     functions -> function functions
Rule 4     function -> LPAREN ID arguments blocks RPAREN
Rule 5     arguments -> LPAREN id_list RPAREN
Rule 6     id_list -> empty
Rule 7     id_list -> ID id_list
Rule 8     blocks -> LPAREN NUM instructions RPAREN
Rule 9     blocks -> LPAREN NUM instructions RPAREN blocks
Rule 10    instructions -> instruction
Rule 11    instructions -> instruction instructions
Rule 12    instruction -> LPAREN LOADCONST REG NUM RPAREN
Rule 13    instruction -> LPAREN LOADINST REG ID RPAREN
Rule 14    instruction -> LPAREN STOREINST ID REG RPAREN
Rule 15    instruction -> LPAREN ADD REG REG REG RPAREN
Rule 16    instruction -> LPAREN SUB REG REG REG RPAREN
Rule 17    instruction -> LPAREN MUL REG REG REG RPAREN
Rule 18    instruction -> LPAREN DIV REG REG REG RPAREN
Rule 19    instruction -> LPAREN LT REG REG REG RPAREN
Rule 20    instruction -> LPAREN GT REG REG REG RPAREN
Rule 21    instruction -> LPAREN CMP REG REG REG RPAREN
Rule 22    instruction -> LPAREN BRANCH REG NUM NUM RPAREN
Rule 23    instruction -> LPAREN RETURN REG RPAREN
Rule 24    instruction -> LPAREN CALL REG ID reg_list RPAREN
Rule 25    reg_list -> empty
Rule 26    reg_list -> REG reg_list
Rule 27    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 15
BRANCH               : 22
CALL                 : 24
CMP                  : 21
DIV                  : 18
GT                   : 20
ID                   : 4 7 13 14 24
LOADCONST            : 12
LOADINST             : 13
LPAREN               : 1 4 5 8 9 12 13 14 15 16 17 18 19 20 21 22 23 24
LT                   : 19
MUL                  : 17
NUM                  : 8 9 12 22 22
REG                  : 12 13 14 15 15 15 16 16 16 17 17 17 18 18 18 19 19 19 20 20 20 21 21 21 22 23 24 26
RETURN               : 23
RPAREN               : 1 4 5 8 9 12 13 14 15 16 17 18 19 20 21 22 23 24
STOREINST            : 14
SUB                  : 16
error                : 

Nonterminals, with rules where they appear

arguments            : 4
blocks               : 4 9
empty                : 2 6 25
function             : 3
functions            : 1 3
id_list              : 5 7
instruction          : 10 11
instructions         : 8 9 11
program              : 0
reg_list             : 24 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . LPAREN functions RPAREN

    LPAREN          shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> LPAREN . functions RPAREN
    (2) functions -> . empty
    (3) functions -> . function functions
    (27) empty -> .
    (4) function -> . LPAREN ID arguments blocks RPAREN

    RPAREN          reduce using rule 27 (empty -> .)
    LPAREN          shift and go to state 5

    function                       shift and go to state 3
    functions                      shift and go to state 4
    empty                          shift and go to state 6

state 3

    (3) functions -> function . functions
    (2) functions -> . empty
    (3) functions -> . function functions
    (27) empty -> .
    (4) function -> . LPAREN ID arguments blocks RPAREN

    RPAREN          reduce using rule 27 (empty -> .)
    LPAREN          shift and go to state 5

    function                       shift and go to state 3
    functions                      shift and go to state 7
    empty                          shift and go to state 6

state 4

    (1) program -> LPAREN functions . RPAREN

    RPAREN          shift and go to state 8


state 5

    (4) function -> LPAREN . ID arguments blocks RPAREN

    ID              shift and go to state 9


state 6

    (2) functions -> empty .

    RPAREN          reduce using rule 2 (functions -> empty .)


state 7

    (3) functions -> function functions .

    RPAREN          reduce using rule 3 (functions -> function functions .)


state 8

    (1) program -> LPAREN functions RPAREN .

    $end            reduce using rule 1 (program -> LPAREN functions RPAREN .)


state 9

    (4) function -> LPAREN ID . arguments blocks RPAREN
    (5) arguments -> . LPAREN id_list RPAREN

    LPAREN          shift and go to state 11

    arguments                      shift and go to state 10

state 10

    (4) function -> LPAREN ID arguments . blocks RPAREN
    (8) blocks -> . LPAREN NUM instructions RPAREN
    (9) blocks -> . LPAREN NUM instructions RPAREN blocks

    LPAREN          shift and go to state 12

    blocks                         shift and go to state 13

state 11

    (5) arguments -> LPAREN . id_list RPAREN
    (6) id_list -> . empty
    (7) id_list -> . ID id_list
    (27) empty -> .

    ID              shift and go to state 16
    RPAREN          reduce using rule 27 (empty -> .)

    id_list                        shift and go to state 14
    empty                          shift and go to state 15

state 12

    (8) blocks -> LPAREN . NUM instructions RPAREN
    (9) blocks -> LPAREN . NUM instructions RPAREN blocks

    NUM             shift and go to state 17


state 13

    (4) function -> LPAREN ID arguments blocks . RPAREN

    RPAREN          shift and go to state 18


state 14

    (5) arguments -> LPAREN id_list . RPAREN

    RPAREN          shift and go to state 19


state 15

    (6) id_list -> empty .

    RPAREN          reduce using rule 6 (id_list -> empty .)


state 16

    (7) id_list -> ID . id_list
    (6) id_list -> . empty
    (7) id_list -> . ID id_list
    (27) empty -> .

    ID              shift and go to state 16
    RPAREN          reduce using rule 27 (empty -> .)

    id_list                        shift and go to state 20
    empty                          shift and go to state 15

state 17

    (8) blocks -> LPAREN NUM . instructions RPAREN
    (9) blocks -> LPAREN NUM . instructions RPAREN blocks
    (10) instructions -> . instruction
    (11) instructions -> . instruction instructions
    (12) instruction -> . LPAREN LOADCONST REG NUM RPAREN
    (13) instruction -> . LPAREN LOADINST REG ID RPAREN
    (14) instruction -> . LPAREN STOREINST ID REG RPAREN
    (15) instruction -> . LPAREN ADD REG REG REG RPAREN
    (16) instruction -> . LPAREN SUB REG REG REG RPAREN
    (17) instruction -> . LPAREN MUL REG REG REG RPAREN
    (18) instruction -> . LPAREN DIV REG REG REG RPAREN
    (19) instruction -> . LPAREN LT REG REG REG RPAREN
    (20) instruction -> . LPAREN GT REG REG REG RPAREN
    (21) instruction -> . LPAREN CMP REG REG REG RPAREN
    (22) instruction -> . LPAREN BRANCH REG NUM NUM RPAREN
    (23) instruction -> . LPAREN RETURN REG RPAREN
    (24) instruction -> . LPAREN CALL REG ID reg_list RPAREN

    LPAREN          shift and go to state 21

    instruction                    shift and go to state 23
    instructions                   shift and go to state 22

state 18

    (4) function -> LPAREN ID arguments blocks RPAREN .

    LPAREN          reduce using rule 4 (function -> LPAREN ID arguments blocks RPAREN .)
    RPAREN          reduce using rule 4 (function -> LPAREN ID arguments blocks RPAREN .)


state 19

    (5) arguments -> LPAREN id_list RPAREN .

    LPAREN          reduce using rule 5 (arguments -> LPAREN id_list RPAREN .)


state 20

    (7) id_list -> ID id_list .

    RPAREN          reduce using rule 7 (id_list -> ID id_list .)


state 21

    (12) instruction -> LPAREN . LOADCONST REG NUM RPAREN
    (13) instruction -> LPAREN . LOADINST REG ID RPAREN
    (14) instruction -> LPAREN . STOREINST ID REG RPAREN
    (15) instruction -> LPAREN . ADD REG REG REG RPAREN
    (16) instruction -> LPAREN . SUB REG REG REG RPAREN
    (17) instruction -> LPAREN . MUL REG REG REG RPAREN
    (18) instruction -> LPAREN . DIV REG REG REG RPAREN
    (19) instruction -> LPAREN . LT REG REG REG RPAREN
    (20) instruction -> LPAREN . GT REG REG REG RPAREN
    (21) instruction -> LPAREN . CMP REG REG REG RPAREN
    (22) instruction -> LPAREN . BRANCH REG NUM NUM RPAREN
    (23) instruction -> LPAREN . RETURN REG RPAREN
    (24) instruction -> LPAREN . CALL REG ID reg_list RPAREN

    LOADCONST       shift and go to state 34
    LOADINST        shift and go to state 27
    STOREINST       shift and go to state 35
    ADD             shift and go to state 29
    SUB             shift and go to state 26
    MUL             shift and go to state 32
    DIV             shift and go to state 33
    LT              shift and go to state 28
    GT              shift and go to state 25
    CMP             shift and go to state 36
    BRANCH          shift and go to state 31
    RETURN          shift and go to state 24
    CALL            shift and go to state 30


state 22

    (8) blocks -> LPAREN NUM instructions . RPAREN
    (9) blocks -> LPAREN NUM instructions . RPAREN blocks

    RPAREN          shift and go to state 37


state 23

    (10) instructions -> instruction .
    (11) instructions -> instruction . instructions
    (10) instructions -> . instruction
    (11) instructions -> . instruction instructions
    (12) instruction -> . LPAREN LOADCONST REG NUM RPAREN
    (13) instruction -> . LPAREN LOADINST REG ID RPAREN
    (14) instruction -> . LPAREN STOREINST ID REG RPAREN
    (15) instruction -> . LPAREN ADD REG REG REG RPAREN
    (16) instruction -> . LPAREN SUB REG REG REG RPAREN
    (17) instruction -> . LPAREN MUL REG REG REG RPAREN
    (18) instruction -> . LPAREN DIV REG REG REG RPAREN
    (19) instruction -> . LPAREN LT REG REG REG RPAREN
    (20) instruction -> . LPAREN GT REG REG REG RPAREN
    (21) instruction -> . LPAREN CMP REG REG REG RPAREN
    (22) instruction -> . LPAREN BRANCH REG NUM NUM RPAREN
    (23) instruction -> . LPAREN RETURN REG RPAREN
    (24) instruction -> . LPAREN CALL REG ID reg_list RPAREN

    RPAREN          reduce using rule 10 (instructions -> instruction .)
    LPAREN          shift and go to state 21

    instruction                    shift and go to state 23
    instructions                   shift and go to state 38

state 24

    (23) instruction -> LPAREN RETURN . REG RPAREN

    REG             shift and go to state 39


state 25

    (20) instruction -> LPAREN GT . REG REG REG RPAREN

    REG             shift and go to state 40


state 26

    (16) instruction -> LPAREN SUB . REG REG REG RPAREN

    REG             shift and go to state 41


state 27

    (13) instruction -> LPAREN LOADINST . REG ID RPAREN

    REG             shift and go to state 42


state 28

    (19) instruction -> LPAREN LT . REG REG REG RPAREN

    REG             shift and go to state 43


state 29

    (15) instruction -> LPAREN ADD . REG REG REG RPAREN

    REG             shift and go to state 44


state 30

    (24) instruction -> LPAREN CALL . REG ID reg_list RPAREN

    REG             shift and go to state 45


state 31

    (22) instruction -> LPAREN BRANCH . REG NUM NUM RPAREN

    REG             shift and go to state 46


state 32

    (17) instruction -> LPAREN MUL . REG REG REG RPAREN

    REG             shift and go to state 47


state 33

    (18) instruction -> LPAREN DIV . REG REG REG RPAREN

    REG             shift and go to state 48


state 34

    (12) instruction -> LPAREN LOADCONST . REG NUM RPAREN

    REG             shift and go to state 49


state 35

    (14) instruction -> LPAREN STOREINST . ID REG RPAREN

    ID              shift and go to state 50


state 36

    (21) instruction -> LPAREN CMP . REG REG REG RPAREN

    REG             shift and go to state 51


state 37

    (8) blocks -> LPAREN NUM instructions RPAREN .
    (9) blocks -> LPAREN NUM instructions RPAREN . blocks
    (8) blocks -> . LPAREN NUM instructions RPAREN
    (9) blocks -> . LPAREN NUM instructions RPAREN blocks

    RPAREN          reduce using rule 8 (blocks -> LPAREN NUM instructions RPAREN .)
    LPAREN          shift and go to state 12

    blocks                         shift and go to state 52

state 38

    (11) instructions -> instruction instructions .

    RPAREN          reduce using rule 11 (instructions -> instruction instructions .)


state 39

    (23) instruction -> LPAREN RETURN REG . RPAREN

    RPAREN          shift and go to state 53


state 40

    (20) instruction -> LPAREN GT REG . REG REG RPAREN

    REG             shift and go to state 54


state 41

    (16) instruction -> LPAREN SUB REG . REG REG RPAREN

    REG             shift and go to state 55


state 42

    (13) instruction -> LPAREN LOADINST REG . ID RPAREN

    ID              shift and go to state 56


state 43

    (19) instruction -> LPAREN LT REG . REG REG RPAREN

    REG             shift and go to state 57


state 44

    (15) instruction -> LPAREN ADD REG . REG REG RPAREN

    REG             shift and go to state 58


state 45

    (24) instruction -> LPAREN CALL REG . ID reg_list RPAREN

    ID              shift and go to state 59


state 46

    (22) instruction -> LPAREN BRANCH REG . NUM NUM RPAREN

    NUM             shift and go to state 60


state 47

    (17) instruction -> LPAREN MUL REG . REG REG RPAREN

    REG             shift and go to state 61


state 48

    (18) instruction -> LPAREN DIV REG . REG REG RPAREN

    REG             shift and go to state 62


state 49

    (12) instruction -> LPAREN LOADCONST REG . NUM RPAREN

    NUM             shift and go to state 63


state 50

    (14) instruction -> LPAREN STOREINST ID . REG RPAREN

    REG             shift and go to state 64


state 51

    (21) instruction -> LPAREN CMP REG . REG REG RPAREN

    REG             shift and go to state 65


state 52

    (9) blocks -> LPAREN NUM instructions RPAREN blocks .

    RPAREN          reduce using rule 9 (blocks -> LPAREN NUM instructions RPAREN blocks .)


state 53

    (23) instruction -> LPAREN RETURN REG RPAREN .

    LPAREN          reduce using rule 23 (instruction -> LPAREN RETURN REG RPAREN .)
    RPAREN          reduce using rule 23 (instruction -> LPAREN RETURN REG RPAREN .)


state 54

    (20) instruction -> LPAREN GT REG REG . REG RPAREN

    REG             shift and go to state 66


state 55

    (16) instruction -> LPAREN SUB REG REG . REG RPAREN

    REG             shift and go to state 67


state 56

    (13) instruction -> LPAREN LOADINST REG ID . RPAREN

    RPAREN          shift and go to state 68


state 57

    (19) instruction -> LPAREN LT REG REG . REG RPAREN

    REG             shift and go to state 69


state 58

    (15) instruction -> LPAREN ADD REG REG . REG RPAREN

    REG             shift and go to state 70


state 59

    (24) instruction -> LPAREN CALL REG ID . reg_list RPAREN
    (25) reg_list -> . empty
    (26) reg_list -> . REG reg_list
    (27) empty -> .

    REG             shift and go to state 72
    RPAREN          reduce using rule 27 (empty -> .)

    reg_list                       shift and go to state 71
    empty                          shift and go to state 73

state 60

    (22) instruction -> LPAREN BRANCH REG NUM . NUM RPAREN

    NUM             shift and go to state 74


state 61

    (17) instruction -> LPAREN MUL REG REG . REG RPAREN

    REG             shift and go to state 75


state 62

    (18) instruction -> LPAREN DIV REG REG . REG RPAREN

    REG             shift and go to state 76


state 63

    (12) instruction -> LPAREN LOADCONST REG NUM . RPAREN

    RPAREN          shift and go to state 77


state 64

    (14) instruction -> LPAREN STOREINST ID REG . RPAREN

    RPAREN          shift and go to state 78


state 65

    (21) instruction -> LPAREN CMP REG REG . REG RPAREN

    REG             shift and go to state 79


state 66

    (20) instruction -> LPAREN GT REG REG REG . RPAREN

    RPAREN          shift and go to state 80


state 67

    (16) instruction -> LPAREN SUB REG REG REG . RPAREN

    RPAREN          shift and go to state 81


state 68

    (13) instruction -> LPAREN LOADINST REG ID RPAREN .

    LPAREN          reduce using rule 13 (instruction -> LPAREN LOADINST REG ID RPAREN .)
    RPAREN          reduce using rule 13 (instruction -> LPAREN LOADINST REG ID RPAREN .)


state 69

    (19) instruction -> LPAREN LT REG REG REG . RPAREN

    RPAREN          shift and go to state 82


state 70

    (15) instruction -> LPAREN ADD REG REG REG . RPAREN

    RPAREN          shift and go to state 83


state 71

    (24) instruction -> LPAREN CALL REG ID reg_list . RPAREN

    RPAREN          shift and go to state 84


state 72

    (26) reg_list -> REG . reg_list
    (25) reg_list -> . empty
    (26) reg_list -> . REG reg_list
    (27) empty -> .

    REG             shift and go to state 72
    RPAREN          reduce using rule 27 (empty -> .)

    reg_list                       shift and go to state 85
    empty                          shift and go to state 73

state 73

    (25) reg_list -> empty .

    RPAREN          reduce using rule 25 (reg_list -> empty .)


state 74

    (22) instruction -> LPAREN BRANCH REG NUM NUM . RPAREN

    RPAREN          shift and go to state 86


state 75

    (17) instruction -> LPAREN MUL REG REG REG . RPAREN

    RPAREN          shift and go to state 87


state 76

    (18) instruction -> LPAREN DIV REG REG REG . RPAREN

    RPAREN          shift and go to state 88


state 77

    (12) instruction -> LPAREN LOADCONST REG NUM RPAREN .

    LPAREN          reduce using rule 12 (instruction -> LPAREN LOADCONST REG NUM RPAREN .)
    RPAREN          reduce using rule 12 (instruction -> LPAREN LOADCONST REG NUM RPAREN .)


state 78

    (14) instruction -> LPAREN STOREINST ID REG RPAREN .

    LPAREN          reduce using rule 14 (instruction -> LPAREN STOREINST ID REG RPAREN .)
    RPAREN          reduce using rule 14 (instruction -> LPAREN STOREINST ID REG RPAREN .)


state 79

    (21) instruction -> LPAREN CMP REG REG REG . RPAREN

    RPAREN          shift and go to state 89


state 80

    (20) instruction -> LPAREN GT REG REG REG RPAREN .

    LPAREN          reduce using rule 20 (instruction -> LPAREN GT REG REG REG RPAREN .)
    RPAREN          reduce using rule 20 (instruction -> LPAREN GT REG REG REG RPAREN .)


state 81

    (16) instruction -> LPAREN SUB REG REG REG RPAREN .

    LPAREN          reduce using rule 16 (instruction -> LPAREN SUB REG REG REG RPAREN .)
    RPAREN          reduce using rule 16 (instruction -> LPAREN SUB REG REG REG RPAREN .)


state 82

    (19) instruction -> LPAREN LT REG REG REG RPAREN .

    LPAREN          reduce using rule 19 (instruction -> LPAREN LT REG REG REG RPAREN .)
    RPAREN          reduce using rule 19 (instruction -> LPAREN LT REG REG REG RPAREN .)


state 83

    (15) instruction -> LPAREN ADD REG REG REG RPAREN .

    LPAREN          reduce using rule 15 (instruction -> LPAREN ADD REG REG REG RPAREN .)
    RPAREN          reduce using rule 15 (instruction -> LPAREN ADD REG REG REG RPAREN .)


state 84

    (24) instruction -> LPAREN CALL REG ID reg_list RPAREN .

    LPAREN          reduce using rule 24 (instruction -> LPAREN CALL REG ID reg_list RPAREN .)
    RPAREN          reduce using rule 24 (instruction -> LPAREN CALL REG ID reg_list RPAREN .)


state 85

    (26) reg_list -> REG reg_list .

    RPAREN          reduce using rule 26 (reg_list -> REG reg_list .)


state 86

    (22) instruction -> LPAREN BRANCH REG NUM NUM RPAREN .

    LPAREN          reduce using rule 22 (instruction -> LPAREN BRANCH REG NUM NUM RPAREN .)
    RPAREN          reduce using rule 22 (instruction -> LPAREN BRANCH REG NUM NUM RPAREN .)


state 87

    (17) instruction -> LPAREN MUL REG REG REG RPAREN .

    LPAREN          reduce using rule 17 (instruction -> LPAREN MUL REG REG REG RPAREN .)
    RPAREN          reduce using rule 17 (instruction -> LPAREN MUL REG REG REG RPAREN .)


state 88

    (18) instruction -> LPAREN DIV REG REG REG RPAREN .

    LPAREN          reduce using rule 18 (instruction -> LPAREN DIV REG REG REG RPAREN .)
    RPAREN          reduce using rule 18 (instruction -> LPAREN DIV REG REG REG RPAREN .)


state 89

    (21) instruction -> LPAREN CMP REG REG REG RPAREN .

    LPAREN          reduce using rule 21 (instruction -> LPAREN CMP REG REG REG RPAREN .)
    RPAREN          reduce using rule 21 (instruction -> LPAREN CMP REG REG REG RPAREN .)

